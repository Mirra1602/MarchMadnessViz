install.packages('xml')
install.packages('XML')
library(XML)
xmldata <- xmlTreeParse('/Volumes/COSMOBOT/fuelbed201001017.xml')
head(xmldata)
data <- xmlSApply (xmldata[[1]], xmlValue)
names(xmldata)
xmldata$children
xmldata$children$FCCS_file
doc <- xmlTreeParse('/Volumes/COSMOBOT/fuelbed201001017.xml', useInternal = T)
top <- xmlRoot(doc)
head(top)
xmlName(top)
names(top)
names(top[[1]])
names(top)xmlSApply(top, xmlValue)
xmlSApply(top, xmlValue)
read.clipboard(header = TRUE)
install.packages("psych")
library("psych")
read.clipboard(header = TRUE)
data <- read.clipboard(header = TRUE)
install.packages("multilevel")
library(ggplot2)
library(multilevel)
head(data)
model0 <- lm(data$salary ~ data$years)
summary(model0)
confint(model0)
model0 <- lm(data$salary ~ data$years + data$courses)
summary(model0)
confint(model0)
head(data)
model0a <- aov(MOD$IQ ~ MOD$condition)
summary(model0a)
TukeyHSD(model0a)
odel0a <- aov(data$salary ~ data$years+ data$courses)
summary(model0a)
TukeyHSD(model0a)
summary(odel0a)
TukeyHSD(odel0a)
head(data)
odel0a <- aov(data$salary ~ data$years+ data$courses + data$profession)
summary(odel0a)
TukeyHSD(odel0a)
odel0a <- aov(data$salary ~ data$profession)
summary(odel10a)
summary(odel0a)
anova(odel01)
anova(odel0a)
data$proefssion
data$profession
odel0a <- aov(data$salary ~ data$years+ data$courses + data$profession)
summary(odel0a)
odel0a <- lm(data$salary ~ data$years+ data$courses + data$profession)
summary(odel0a)
m1 <- lm(data$salary ~ data$years+ data$courses + data$profession)
m2 <- lm(data$salary ~ data$years+ data$courses )
m3 <- lm(data$salary ~ data$years+ data$years )
m3 <- lm(data$salary ~ data$years+ data$profession )
m3 <- lm(data$salary ~ data$courses+ data$profession )
m3 <- lm(data$salary ~ data$years+ data$profession )
m4 <- lm(data$salary ~ data$courses+ data$profession )
anova()
anova(m2,m1)
anova(m3,m1)
anova(m4,m1)
model1 = lm(data$salary ~ data$years)
summary(model1)
library(psych)
data <- read.clipboard(header= T)
head(data)
cor (data$extra, data$happy)
cor (data$extra, data$diverse)
cor (data$diverse, data$happy)
summary(lm(data$happy ~ data$diverse))
summary(lm(data$happy ~ data$diverse + data$extra))
confit(lm(data$happy ~ data$diverse + data$extra))
confint(lm(data$happy ~ data$diverse + data$extra))
confint(lm(data$happy ~ data$extra))
install.packages("RCurl")
library (RCurl)
sochi.medals.URL = "https://docs.google.com/spreadsheets/d/1Al7I7nS0BP50IfThs55OKv5UPI9u-ctZgZRyDQma_G8/export?format=csv&gid=0"
medals <- read.csv(textConnection(getURL(sochi.medals.URL)), stringsAsFactors = FALSE)
head(medals)
melt(values$medals[,2:6], c("Country"))
library(reshape)
melt(values$medals[,2:6], c("Country"))
gun.deaths <- read.csv(
"http://slate-interactives-prod.elasticbeanstalk.com/gun-deaths/getCSV.php")
tail(gun.deaths)
summary(gun.deaths)
library(XML)
gun.deaths.text <- list()
gun.deaths.text
nrow(gun.deaths)
length(gun.deaths.text)
sochi.medals.URL = "https://docs.google.com/spreadsheets/d/1Al7I7nS0BP50IfThs55OKv5UPI9u-ctZgZRyDQma_G8/export?format=csv&gid=0"
medals <- read.csv(textConnection(getURL(sochi.medals.URL)),
stringsAsFactors = FALSE)
library(XML)
gun.deaths.text <- list()
library(RODBC)
install.packages("RODBC")
library(RODBC)
filenames <- list.files(path = "E:\\PNWSL\\LakeTahoe\\FCCS2014Janruns\\FCCSfuelbeds\\")
filenames
filenames <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/FCCSfuelbeds/")
filenames
dbFiles <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/dbFiles/")
dbFiles <- dbFiles[c(1,3:10,2)]
dbFiles
dbFiles <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/2014Janruns/dbfiles/")
dbFiles <- dbFiles[c(1,3:10,2)]
dbFiles
DBlist <- vector ("list", length(dbFiles))
fccs <- vector ("list", length(filenames))
fvs_fccs <- vector ("list", length(dbFiles))
DBlist <- vector ("list", length(dbFiles))
fccs <- vector ("list", length(filenames))
fvs_fccs <- vector ("list", length(dbFiles))
library(RODBC)
library(plyr)
library(xlsx)
library(car)
filenames <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/FCCSfuelbeds/")
filenames <- filenames[c(1,3:10,2)]
dbFiles <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/2014Janruns/dbfiles/")
dbFiles <- dbFiles[c(1,3:10,2)]
filenames
dbFiles
### list to save the DB files to
DBlist <- vector ("list", length(dbFiles))
fccs <- vector ("list", length(filenames))
fvs_fccs <- vector ("list", length(dbFiles))
for (i in 1:length(dbFiles))
{
Block <- file.path(paste0 ("/Volumes/ONETOUCH/PNWSL/LakeTahoe/2014Janruns/dbfiles/", dbFiles[i]) )
channel <- odbcConnectAccess(Block)
DBlist[[i]] <- sqlQuery(channel, "select StandID, Year, DFM, REG AS Regen,
RXS AS surfaceFuel, WIN AS wind, RXTH AS thinning, ID
from FVS_Compute
where Year = 2015 or Year = 2050
order by StandID")
odbcClose(channel)
print(dim (DBlist[[i]]))
fccs[[i]] <- read.csv(paste0 ("/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/FCCSfuelbeds/", filenames[i]), header = T )
print(dim(fccs[[i]]))
fvs_fccs[[i]] <- merge (DBlist[[i]], fccs[[i]], by.x = "ID", by.y = "Fuelbed_number" )
fvs_fccs[[i]] <- fvs_fccs[[i]][ ,c(1:8, 23:25) ]
print(dim(fvs_fccs[[i]]))
}
for (i in 1:length(dbFiles))
{
Block <- file.path(paste("/Volumes/ONETOUCH/PNWSL/LakeTahoe/2014Janruns/dbfiles/", dbFiles[i], sep = "") )
channel <- odbcConnectAccess(Block)
DBlist[[i]] <- sqlQuery(channel, "select StandID, Year, DFM, REG AS Regen,
RXS AS surfaceFuel, WIN AS wind, RXTH AS thinning, ID
from FVS_Compute
where Year = 2015 or Year = 2050
order by StandID")
odbcClose(channel)
print(dim (DBlist[[i]]))
fccs[[i]] <- read.csv(paste0 ("/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/FCCSfuelbeds/", filenames[i]), header = T )
print(dim(fccs[[i]]))
fvs_fccs[[i]] <- merge (DBlist[[i]], fccs[[i]], by.x = "ID", by.y = "Fuelbed_number" )
fvs_fccs[[i]] <- fvs_fccs[[i]][ ,c(1:8, 23:25) ]
print(dim(fvs_fccs[[i]]))
}
library(RODBC)
i=1
Block <- file.path(paste("/Volumes/ONETOUCH/PNWSL/LakeTahoe/2014Janruns/dbfiles/", dbFiles[i], sep = "") )
Block
channel <- odbcConnectAccess(Block)
channel <- odbcConnect(Block)
channel <- odbcConnectAccess(Block)
filenames <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/")
filenames <- filenames[c(1,3:10,2)]
filenames
grep('Block', filenames)
filenames <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/")
filenames <- filenames[grep('Block', filenames)]
filenames
dbfiles <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/2014Janruns/dbfiles")
dbfiles
dbFiles <- dbFiles[grep('FVSout', dbfiles)]
dbFiles
dbFiles <- dbFiles[grep('FVSout', dbFiles)]
dbFiles
dbFiles <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/2014Janruns/dbfiles")
dbFiles <- dbFiles[grep('FVSout', dbFiles)]
dbFiles
dbFiles <- list.files(path = "/Volumes/ONETOUCH/PNWSL/LakeTahoe/2014Janruns/dbfiles")
dbFiles
DBlist <- vector ("list", length(dbFiles))
fccs <- vector ("list", length(filenames))
fvs_fccs <- vector ("list", length(dbFiles))
for (i in 1:length(dbFiles))
{
Block <- file.path(paste0 ("F:\\PNWSL\\LakeTahoe\\2014Janruns\\dbFiles\\", dbFiles[i]) )
channel <- odbcConnectAccess(Block)
DBlist[[i]] <- sqlQuery(channel, "select StandID, Year, DFM, REG AS Regen,
RXS AS surfaceFuel, WIN AS wind, RXTH AS thinning, ID
from FVS_Compute
where Year = 2010 or Year = 2011
order by StandID")
odbcClose(channel)
print(dim (DBlist[[i]]))
fccs[[i]] <- read.csv(paste0 ("F:\\PNWSL\\LakeTahoe\\FCCS2014Janruns\\FCCSfuelbeds\\", filenames[i]), header = T )
print(dim(fccs[[i]]))
fvs_fccs[[i]] <- merge (DBlist[[i]], fccs[[i]], by.x = "ID", by.y = "Fuelbed_number" )
fvs_fccs[[i]] <- fvs_fccs[[i]][ ,c(1:8, 23:25) ]
print(dim(fvs_fccs[[i]]))
}
for (i in 1:length(dbFiles))
{
Block <- file.path(paste ("F:\\PNWSL\\LakeTahoe\\2014Janruns\\dbFiles\\", dbFiles[i], sep = '') )
channel <- odbcConnectAccess(Block)
DBlist[[i]] <- sqlQuery(channel, "select StandID, Year, DFM, REG AS Regen,
RXS AS surfaceFuel, WIN AS wind, RXTH AS thinning, ID
from FVS_Compute
where Year = 2010 or Year = 2011
order by StandID")
odbcClose(channel)
print(dim (DBlist[[i]]))
fccs[[i]] <- read.csv(paste0 ("F:\\PNWSL\\LakeTahoe\\FCCS2014Janruns\\FCCSfuelbeds\\", filenames[i]), header = T )
print(dim(fccs[[i]]))
fvs_fccs[[i]] <- merge (DBlist[[i]], fccs[[i]], by.x = "ID", by.y = "Fuelbed_number" )
fvs_fccs[[i]] <- fvs_fccs[[i]][ ,c(1:8, 23:25) ]
print(dim(fvs_fccs[[i]]))
}
library(RODBC)
for (i in 1:length(dbFiles))
{
Block <- file.path(paste ("F:\\PNWSL\\LakeTahoe\\2014Janruns\\dbFiles\\", dbFiles[i], sep = '') )
channel <- odbcConnectAccess(Block)
DBlist[[i]] <- sqlQuery(channel, "select StandID, Year, DFM, REG AS Regen,
RXS AS surfaceFuel, WIN AS wind, RXTH AS thinning, ID
from FVS_Compute
where Year = 2010 or Year = 2011
order by StandID")
odbcClose(channel)
print(dim (DBlist[[i]]))
fccs[[i]] <- read.csv(paste0 ("F:\\PNWSL\\LakeTahoe\\FCCS2014Janruns\\FCCSfuelbeds\\", filenames[i]), header = T )
print(dim(fccs[[i]]))
fvs_fccs[[i]] <- merge (DBlist[[i]], fccs[[i]], by.x = "ID", by.y = "Fuelbed_number" )
fvs_fccs[[i]] <- fvs_fccs[[i]][ ,c(1:8, 23:25) ]
print(dim(fvs_fccs[[i]]))
}
for (i in 1:length(dbFiles))
{
Block <- file.path(paste ("F:\\PNWSL\\LakeTahoe\\2014Janruns\\dbFiles\\", dbFiles[i], sep = '') )
channel <- odbcConnect(Block)
DBlist[[i]] <- sqlQuery(channel, "select StandID, Year, DFM, REG AS Regen,
RXS AS surfaceFuel, WIN AS wind, RXTH AS thinning, ID
from FVS_Compute
where Year = 2010 or Year = 2011
order by StandID")
odbcClose(channel)
print(dim (DBlist[[i]]))
fccs[[i]] <- read.csv(paste0 ("F:\\PNWSL\\LakeTahoe\\FCCS2014Janruns\\FCCSfuelbeds\\", filenames[i]), header = T )
print(dim(fccs[[i]]))
fvs_fccs[[i]] <- merge (DBlist[[i]], fccs[[i]], by.x = "ID", by.y = "Fuelbed_number" )
fvs_fccs[[i]] <- fvs_fccs[[i]][ ,c(1:8, 23:25) ]
print(dim(fvs_fccs[[i]]))
}
data <- read.table("/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns")
data <- read.table("/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/2014.06.25_fvs_fccs_wide.txt")
head(data)
library(xlsx)
write.xlsx(data,  "/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/2014.06.25_fvs_fccs_wide.xlsx"")
write.xlsx(data,  "/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/2014.06.25_fvs_fccs_wide.xlsx")
write.xlsx(data,  "/Volumes/ONETOUCH/PNWSL/LakeTahoe/FCCS2014JanRuns/2014.06.25_fvs_fccs_wide.xlsx")
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
shiny::runApp('Dropbox/PythonProject/ShinyApp')
15^8
(3^8)*(5^8)
library(tidyr)
library(ggplot2)
library(ggthemes)
library(scales)
library(dplyr)
install.packages('tidyr', 'ggthemes','dplyr')
install.packages('tidyr', 'ggthemes')
install.packages('dplyr')
library(tidyr)
library(ggplot2)
library(ggthemes)
library(scales)
library(dplyr)
dat <- data_frame(`2014-11-01`=c(0.11, 0.22, 0.35, 0.31, 0.01),
`2015-12-01`=c(0.17, 0.30, 0.30, 0.23, 0.00),
slope=factor(sign(`2014-11-01` - `2015-12-01`)),
fear_level=c("Very worried", "Somewhat worried", "Not too worried",
"Not at all", "Don't know/refused"))
dat
dat <- gather(dat, month, value, -fear_level, -slope)
dat <- mutate(dat, month=as.Date(as.character(month)))
dat
end_lab <- dat %>%
filter(month==as.Date("2015-12-01")) %>%
group_by(value) %>%
summarise(lab=sprintf("%s", paste(fear_level, collapse=", ")))
end_lab
gg <- ggplot(dat)
# line
gg <- gg + geom_line(aes(x=month, y=value, color=slope, group=fear_level), size=1)
# points
gg <- gg + geom_point(aes(x=month, y=value, fill=slope, group=fear_level),
color="white", shape=21, size=2.5)
gg
gg <- gg + geom_text(data=filter(dat, month==as.Date("2014-11-01")),
aes(x=month, y=value, label=sprintf("%s — %s  ", fear_level, percent(value))),
hjust=1, size=3)
gg
gg <- gg + geom_text(data=end_lab,
aes(x=as.Date("2015-12-01"), y=value,
label=sprintf("  %s — %s", percent(value), lab)),
hjust=0, size=3)
gg
gg <- gg + scale_x_date(expand=c(0.125, 0),
labels=date_format("%bn%Y"),
breaks=c(as.Date("2014-11-01"), as.Date("2015-12-01")),
limits=c(as.Date("2014-02-01"), as.Date("2016-12-01")))
gg <- gg + scale_y_continuous()
gg
gg <- gg + scale_color_manual(values=c("#f0b35f", "#177fb9"))
gg
gg <- gg + scale_fill_manual(values=c("#f0b35f", "#177fb9"))
gg
gg <- gg + labs(x=NULL, y=NULL, title="Fear of terror attacks (change since last year)n")
gg
gg <- gg + theme_tufte(base_family="Helvetica")
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.y=element_blank())
gg <- gg + theme(legend.position="none")
gg <- gg + theme(plot.title=element_text(hjust=0.5))
gg
end_lab
dat
devtools::install_github("GuangchuangYu/emojifont")
install.package('devtools')
install.packages('devtools')
install.packages('devtools')
library(emojifont)
## list available emoji fonts
list.emojifonts()
## [1] "OpenSansEmoji.ttf"
## load selected emoji font
load.emojifont('OpenSansEmoji.ttf')
load.emojifont('OpenSansEmoji.ttf')
install.packages('emojifont')
devtools::install_github("GuangchuangYu/emojifont")
library(emojifont)
## list available emoji fonts
list.emojifonts()
## [1] "OpenSansEmoji.ttf"
## load selected emoji font
load.emojifont('OpenSansEmoji.ttf')
library(emojifont)
require(remoji)
set.seed(123)
x <- rnorm(10)
set.seed(321)
y <- rnorm(10)
plot(x, y, cex=0)
text(x, y, labels=emoji('cow'), cex=1.5, col='steelblue', family='OpenSansEmoji')
devtools::install_github("GuangchuangYu/emojifont")
library(dplyr)
library(stringr)
library(tidyr)
library(Shiny)
library(shiny)
runApp("ShinyApp")
setwd('/Users/yogi463/Dropbox/PythonProject')
runApp("ShinyApp")
